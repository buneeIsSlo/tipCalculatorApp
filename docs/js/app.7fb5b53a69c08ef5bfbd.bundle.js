(()=>{"use strict";var t={update:null,begin:null,loopBegin:null,changeBegin:null,change:null,changeComplete:null,loopComplete:null,complete:null,loop:1,direction:"normal",autoplay:!0,timelineOffset:0},e={duration:1e3,delay:0,endDelay:0,easing:"easeOutElastic(1, .5)",round:0},n=["translateX","translateY","translateZ","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","perspective","matrix","matrix3d"],r={CSS:{},springs:{}};function i(t,e,n){return Math.min(Math.max(t,e),n)}function a(t,e){return t.indexOf(e)>-1}function o(t,e){return t.apply(null,e)}var u={arr:function(t){return Array.isArray(t)},obj:function(t){return a(Object.prototype.toString.call(t),"Object")},pth:function(t){return u.obj(t)&&t.hasOwnProperty("totalLength")},svg:function(t){return t instanceof SVGElement},inp:function(t){return t instanceof HTMLInputElement},dom:function(t){return t.nodeType||u.svg(t)},str:function(t){return"string"==typeof t},fnc:function(t){return"function"==typeof t},und:function(t){return void 0===t},nil:function(t){return u.und(t)||null===t},hex:function(t){return/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(t)},rgb:function(t){return/^rgb/.test(t)},hsl:function(t){return/^hsl/.test(t)},col:function(t){return u.hex(t)||u.rgb(t)||u.hsl(t)},key:function(n){return!t.hasOwnProperty(n)&&!e.hasOwnProperty(n)&&"targets"!==n&&"keyframes"!==n}};function s(t){var e=/\(([^)]+)\)/.exec(t);return e?e[1].split(",").map((function(t){return parseFloat(t)})):[]}function c(t,e){var n=s(t),a=i(u.und(n[0])?1:n[0],.1,100),o=i(u.und(n[1])?100:n[1],.1,100),c=i(u.und(n[2])?10:n[2],.1,100),l=i(u.und(n[3])?0:n[3],.1,100),h=Math.sqrt(o/a),d=c/(2*Math.sqrt(o*a)),f=d<1?h*Math.sqrt(1-d*d):0,m=d<1?(d*h-l)/f:-l+h;function p(t){var n=e?e*t/1e3:t;return n=d<1?Math.exp(-n*d*h)*(1*Math.cos(f*n)+m*Math.sin(f*n)):(1+m*n)*Math.exp(-n*h),0===t||1===t?t:1-n}return e?p:function(){var e=r.springs[t];if(e)return e;for(var n=1/6,i=0,a=0;;)if(1===p(i+=n)){if(++a>=16)break}else a=0;var o=i*n*1e3;return r.springs[t]=o,o}}function l(t){return void 0===t&&(t=10),function(e){return Math.ceil(i(e,1e-6,1)*t)*(1/t)}}var h,d,f=function(){var t=.1;function e(t,e){return 1-3*e+3*t}function n(t,e){return 3*e-6*t}function r(t){return 3*t}function i(t,i,a){return((e(i,a)*t+n(i,a))*t+r(i))*t}function a(t,i,a){return 3*e(i,a)*t*t+2*n(i,a)*t+r(i)}return function(e,n,r,o){if(0<=e&&e<=1&&0<=r&&r<=1){var u=new Float32Array(11);if(e!==n||r!==o)for(var s=0;s<11;++s)u[s]=i(s*t,e,r);return function(s){return e===n&&r===o||0===s||1===s?s:i(function(n){for(var o=0,s=1;10!==s&&u[s]<=n;++s)o+=t;--s;var c=o+(n-u[s])/(u[s+1]-u[s])*t,l=a(c,e,r);return l>=.001?function(t,e,n,r){for(var o=0;o<4;++o){var u=a(e,n,r);if(0===u)return e;e-=(i(e,n,r)-t)/u}return e}(n,c,e,r):0===l?c:function(t,e,n,r,a){var o,u,s=0;do{(o=i(u=e+(n-e)/2,r,a)-t)>0?n=u:e=u}while(Math.abs(o)>1e-7&&++s<10);return u}(n,o,o+t,e,r)}(s),n,o)}}}}(),m=(h={linear:function(){return function(t){return t}}},d={Sine:function(){return function(t){return 1-Math.cos(t*Math.PI/2)}},Circ:function(){return function(t){return 1-Math.sqrt(1-t*t)}},Back:function(){return function(t){return t*t*(3*t-2)}},Bounce:function(){return function(t){for(var e,n=4;t<((e=Math.pow(2,--n))-1)/11;);return 1/Math.pow(4,3-n)-7.5625*Math.pow((3*e-2)/22-t,2)}},Elastic:function(t,e){void 0===t&&(t=1),void 0===e&&(e=.5);var n=i(t,1,10),r=i(e,.1,2);return function(t){return 0===t||1===t?t:-n*Math.pow(2,10*(t-1))*Math.sin((t-1-r/(2*Math.PI)*Math.asin(1/n))*(2*Math.PI)/r)}}},["Quad","Cubic","Quart","Quint","Expo"].forEach((function(t,e){d[t]=function(){return function(t){return Math.pow(t,e+2)}}})),Object.keys(d).forEach((function(t){var e=d[t];h["easeIn"+t]=e,h["easeOut"+t]=function(t,n){return function(r){return 1-e(t,n)(1-r)}},h["easeInOut"+t]=function(t,n){return function(r){return r<.5?e(t,n)(2*r)/2:1-e(t,n)(-2*r+2)/2}},h["easeOutIn"+t]=function(t,n){return function(r){return r<.5?(1-e(t,n)(1-2*r))/2:(e(t,n)(2*r-1)+1)/2}}})),h);function p(t,e){if(u.fnc(t))return t;var n=t.split("(")[0],r=m[n],i=s(t);switch(n){case"spring":return c(t,e);case"cubicBezier":return o(f,i);case"steps":return o(l,i);default:return o(r,i)}}function g(t){try{return document.querySelectorAll(t)}catch(t){return}}function v(t,e){for(var n=t.length,r=arguments.length>=2?arguments[1]:void 0,i=[],a=0;a<n;a++)if(a in t){var o=t[a];e.call(r,o,a,t)&&i.push(o)}return i}function y(t){return t.reduce((function(t,e){return t.concat(u.arr(e)?y(e):e)}),[])}function b(t){return u.arr(t)?t:(u.str(t)&&(t=g(t)||t),t instanceof NodeList||t instanceof HTMLCollection?[].slice.call(t):[t])}function S(t,e){return t.some((function(t){return t===e}))}function k(t){var e={};for(var n in t)e[n]=t[n];return e}function C(t,e){var n=k(t);for(var r in t)n[r]=e.hasOwnProperty(r)?e[r]:t[r];return n}function T(t,e){var n=k(t);for(var r in e)n[r]=u.und(t[r])?e[r]:t[r];return n}function w(t){var e=/[+-]?\d*\.?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(t);if(e)return e[1]}function M(t,e){return u.fnc(t)?t(e.target,e.id,e.total):t}function I(t,e){return t.getAttribute(e)}function A(t,e,n){if(S([n,"deg","rad","turn"],w(e)))return e;var i=r.CSS[e+n];if(!u.und(i))return i;var a=document.createElement(t.tagName),o=t.parentNode&&t.parentNode!==document?t.parentNode:document.body;o.appendChild(a),a.style.position="absolute",a.style.width=100+n;var s=100/a.offsetWidth;o.removeChild(a);var c=s*parseFloat(e);return r.CSS[e+n]=c,c}function x(t,e,n){if(e in t.style){var r=e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase(),i=t.style[e]||getComputedStyle(t).getPropertyValue(r)||"0";return n?A(t,i,n):i}}function O(t,e){return u.dom(t)&&!u.inp(t)&&(!u.nil(I(t,e))||u.svg(t)&&t[e])?"attribute":u.dom(t)&&S(n,e)?"transform":u.dom(t)&&"transform"!==e&&x(t,e)?"css":null!=t[e]?"object":void 0}function P(t){if(u.dom(t)){for(var e,n=t.style.transform||"",r=/(\w+)\(([^)]*)\)/g,i=new Map;e=r.exec(n);)i.set(e[1],e[2]);return i}}function E(t,e,n,r){switch(O(t,e)){case"transform":return function(t,e,n,r){var i=a(e,"scale")?1:0+function(t){return a(t,"translate")||"perspective"===t?"px":a(t,"rotate")||a(t,"skew")?"deg":void 0}(e),o=P(t).get(e)||i;return n&&(n.transforms.list.set(e,o),n.transforms.last=e),r?A(t,o,r):o}(t,e,r,n);case"css":return x(t,e,n);case"attribute":return I(t,e);default:return t[e]||0}}function L(t,e){var n=/^(\*=|\+=|-=)/.exec(t);if(!n)return t;var r=w(t)||0,i=parseFloat(e),a=parseFloat(t.replace(n[0],""));switch(n[0][0]){case"+":return i+a+r;case"-":return i-a+r;case"*":return i*a+r}}function _(t,e){if(u.col(t))return function(t){return u.rgb(t)?(n=/rgb\((\d+,\s*[\d]+,\s*[\d]+)\)/g.exec(e=t))?"rgba("+n[1]+",1)":e:u.hex(t)?function(t){var e=t.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i,(function(t,e,n,r){return e+e+n+n+r+r})),n=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return"rgba("+parseInt(n[1],16)+","+parseInt(n[2],16)+","+parseInt(n[3],16)+",1)"}(t):u.hsl(t)?function(t){var e,n,r,i=/hsl\((\d+),\s*([\d.]+)%,\s*([\d.]+)%\)/g.exec(t)||/hsla\((\d+),\s*([\d.]+)%,\s*([\d.]+)%,\s*([\d.]+)\)/g.exec(t),a=parseInt(i[1],10)/360,o=parseInt(i[2],10)/100,u=parseInt(i[3],10)/100,s=i[4]||1;function c(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+(e-t)*(2/3-n)*6:t}if(0==o)e=n=r=u;else{var l=u<.5?u*(1+o):u+o-u*o,h=2*u-l;e=c(h,l,a+1/3),n=c(h,l,a),r=c(h,l,a-1/3)}return"rgba("+255*e+","+255*n+","+255*r+","+s+")"}(t):void 0;var e,n}(t);if(/\s/g.test(t))return t;var n=w(t),r=n?t.substr(0,t.length-n.length):t;return e?r+e:r}function B(t,e){return Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2))}function D(t){for(var e,n=t.points,r=0,i=0;i<n.numberOfItems;i++){var a=n.getItem(i);i>0&&(r+=B(e,a)),e=a}return r}function V(t){if(t.getTotalLength)return t.getTotalLength();switch(t.tagName.toLowerCase()){case"circle":return function(t){return 2*Math.PI*I(t,"r")}(t);case"rect":return function(t){return 2*I(t,"width")+2*I(t,"height")}(t);case"line":return function(t){return B({x:I(t,"x1"),y:I(t,"y1")},{x:I(t,"x2"),y:I(t,"y2")})}(t);case"polyline":return D(t);case"polygon":return function(t){var e=t.points;return D(t)+B(e.getItem(e.numberOfItems-1),e.getItem(0))}(t)}}function q(t,e){var n=e||{},r=n.el||function(t){for(var e=t.parentNode;u.svg(e)&&u.svg(e.parentNode);)e=e.parentNode;return e}(t),i=r.getBoundingClientRect(),a=I(r,"viewBox"),o=i.width,s=i.height,c=n.viewBox||(a?a.split(" "):[0,0,o,s]);return{el:r,viewBox:c,x:c[0]/1,y:c[1]/1,w:o,h:s,vW:c[2],vH:c[3]}}function F(t,e,n){function r(n){void 0===n&&(n=0);var r=e+n>=1?e+n:0;return t.el.getPointAtLength(r)}var i=q(t.el,t.svg),a=r(),o=r(-1),u=r(1),s=n?1:i.w/i.vW,c=n?1:i.h/i.vH;switch(t.property){case"x":return(a.x-i.x)*s;case"y":return(a.y-i.y)*c;case"angle":return 180*Math.atan2(u.y-o.y,u.x-o.x)/Math.PI}}function G(t,e){var n=/[+-]?\d*\.?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?/g,r=_(u.pth(t)?t.totalLength:t,e)+"";return{original:r,numbers:r.match(n)?r.match(n).map(Number):[0],strings:u.str(t)||e?r.split(n):[]}}function N(t){return v(t?y(u.arr(t)?t.map(b):b(t)):[],(function(t,e,n){return n.indexOf(t)===e}))}function R(t){var e=N(t);return e.map((function(t,n){return{target:t,id:n,total:e.length,transforms:{list:P(t)}}}))}function j(t,e){var n=k(e);if(/^spring/.test(n.easing)&&(n.duration=c(n.easing)),u.arr(t)){var r=t.length;2!==r||u.obj(t[0])?u.fnc(e.duration)||(n.duration=e.duration/r):t={value:t}}var i=u.arr(t)?t:[t];return i.map((function(t,n){var r=u.obj(t)&&!u.pth(t)?t:{value:t};return u.und(r.delay)&&(r.delay=n?0:e.delay),u.und(r.endDelay)&&(r.endDelay=n===i.length-1?e.endDelay:0),r})).map((function(t){return T(t,n)}))}var Q={css:function(t,e,n){return t.style[e]=n},attribute:function(t,e,n){return t.setAttribute(e,n)},object:function(t,e,n){return t[e]=n},transform:function(t,e,n,r,i){if(r.list.set(e,n),e===r.last||i){var a="";r.list.forEach((function(t,e){a+=e+"("+t+") "})),t.style.transform=a}}};function $(t,e){R(t).forEach((function(t){for(var n in e){var r=M(e[n],t),i=t.target,a=w(r),o=E(i,n,a,t),u=L(_(r,a||w(o)),o),s=O(i,n);Q[s](i,n,u,t.transforms,!0)}}))}function H(t,e){return v(y(t.map((function(t){return e.map((function(e){return function(t,e){var n=O(t.target,e.name);if(n){var r=function(t,e){var n;return t.tweens.map((function(r){var i=function(t,e){var n={};for(var r in t){var i=M(t[r],e);u.arr(i)&&1===(i=i.map((function(t){return M(t,e)}))).length&&(i=i[0]),n[r]=i}return n.duration=parseFloat(n.duration),n.delay=parseFloat(n.delay),n}(r,e),a=i.value,o=u.arr(a)?a[1]:a,s=w(o),c=E(e.target,t.name,s,e),l=n?n.to.original:c,h=u.arr(a)?a[0]:l,d=w(h)||w(c),f=s||d;return u.und(o)&&(o=l),i.from=G(h,f),i.to=G(L(o,h),f),i.start=n?n.end:0,i.end=i.start+i.delay+i.duration+i.endDelay,i.easing=p(i.easing,i.duration),i.isPath=u.pth(a),i.isPathTargetInsideSVG=i.isPath&&u.svg(e.target),i.isColor=u.col(i.from.original),i.isColor&&(i.round=1),n=i,i}))}(e,t),i=r[r.length-1];return{type:n,property:e.name,animatable:t,tweens:r,duration:i.end,delay:r[0].delay,endDelay:i.endDelay}}}(t,e)}))}))),(function(t){return!u.und(t)}))}function X(t,e){var n=t.length,r=function(t){return t.timelineOffset?t.timelineOffset:0},i={};return i.duration=n?Math.max.apply(Math,t.map((function(t){return r(t)+t.duration}))):e.duration,i.delay=n?Math.min.apply(Math,t.map((function(t){return r(t)+t.delay}))):e.delay,i.endDelay=n?i.duration-Math.max.apply(Math,t.map((function(t){return r(t)+t.duration-t.endDelay}))):e.endDelay,i}var W=0,Y=[],Z=function(){var t;function e(n){for(var r=Y.length,i=0;i<r;){var a=Y[i];a.paused?(Y.splice(i,1),r--):(a.tick(n),i++)}t=i>0?requestAnimationFrame(e):void 0}return"undefined"!=typeof document&&document.addEventListener("visibilitychange",(function(){z.suspendWhenDocumentHidden&&(J()?t=cancelAnimationFrame(t):(Y.forEach((function(t){return t._onDocumentVisibility()})),Z()))})),function(){t||J()&&z.suspendWhenDocumentHidden||!(Y.length>0)||(t=requestAnimationFrame(e))}}();function J(){return!!document&&document.hidden}function z(n){void 0===n&&(n={});var r,a=0,o=0,s=0,c=0,l=null;function h(t){var e=window.Promise&&new Promise((function(t){return l=t}));return t.finished=e,e}var d=function(n){var r=C(t,n),i=C(e,n),a=function(t,e){var n=[],r=e.keyframes;for(var i in r&&(e=T(function(t){for(var e=v(y(t.map((function(t){return Object.keys(t)}))),(function(t){return u.key(t)})).reduce((function(t,e){return t.indexOf(e)<0&&t.push(e),t}),[]),n={},r=function(r){var i=e[r];n[i]=t.map((function(t){var e={};for(var n in t)u.key(n)?n==i&&(e.value=t[n]):e[n]=t[n];return e}))},i=0;i<e.length;i++)r(i);return n}(r),e)),e)u.key(i)&&n.push({name:i,tweens:j(e[i],t)});return n}(i,n),o=R(n.targets),s=H(o,a),c=X(s,i),l=W;return W++,T(r,{id:l,children:[],animatables:o,animations:s,duration:c.duration,delay:c.delay,endDelay:c.endDelay})}(n);function f(){var t=d.direction;"alternate"!==t&&(d.direction="normal"!==t?"normal":"reverse"),d.reversed=!d.reversed,r.forEach((function(t){return t.reversed=d.reversed}))}function m(t){return d.reversed?d.duration-t:t}function p(){a=0,o=m(d.currentTime)*(1/z.speed)}function g(t,e){e&&e.seek(t-e.timelineOffset)}function b(t){for(var e=0,n=d.animations,r=n.length;e<r;){var a=n[e],o=a.animatable,u=a.tweens,s=u.length-1,c=u[s];s&&(c=v(u,(function(e){return t<e.end}))[0]||c);for(var l=i(t-c.start-c.delay,0,c.duration)/c.duration,h=isNaN(l)?1:c.easing(l),f=c.to.strings,m=c.round,p=[],g=c.to.numbers.length,y=void 0,b=0;b<g;b++){var S=void 0,k=c.to.numbers[b],C=c.from.numbers[b]||0;S=c.isPath?F(c.value,h*k,c.isPathTargetInsideSVG):C+h*(k-C),m&&(c.isColor&&b>2||(S=Math.round(S*m)/m)),p.push(S)}var T=f.length;if(T){y=f[0];for(var w=0;w<T;w++){f[w];var M=f[w+1],I=p[w];isNaN(I)||(y+=M?I+M:I+" ")}}else y=p[0];Q[a.type](o.target,a.property,y,o.transforms),a.currentValue=y,e++}}function S(t){d[t]&&!d.passThrough&&d[t](d)}function k(t){var e=d.duration,n=d.delay,u=e-d.endDelay,p=m(t);d.progress=i(p/e*100,0,100),d.reversePlayback=p<d.currentTime,r&&function(t){if(d.reversePlayback)for(var e=c;e--;)g(t,r[e]);else for(var n=0;n<c;n++)g(t,r[n])}(p),!d.began&&d.currentTime>0&&(d.began=!0,S("begin")),!d.loopBegan&&d.currentTime>0&&(d.loopBegan=!0,S("loopBegin")),p<=n&&0!==d.currentTime&&b(0),(p>=u&&d.currentTime!==e||!e)&&b(e),p>n&&p<u?(d.changeBegan||(d.changeBegan=!0,d.changeCompleted=!1,S("changeBegin")),S("change"),b(p)):d.changeBegan&&(d.changeCompleted=!0,d.changeBegan=!1,S("changeComplete")),d.currentTime=i(p,0,e),d.began&&S("update"),t>=e&&(o=0,d.remaining&&!0!==d.remaining&&d.remaining--,d.remaining?(a=s,S("loopComplete"),d.loopBegan=!1,"alternate"===d.direction&&f()):(d.paused=!0,d.completed||(d.completed=!0,S("loopComplete"),S("complete"),!d.passThrough&&"Promise"in window&&(l(),h(d)))))}return h(d),d.reset=function(){var t=d.direction;d.passThrough=!1,d.currentTime=0,d.progress=0,d.paused=!0,d.began=!1,d.loopBegan=!1,d.changeBegan=!1,d.completed=!1,d.changeCompleted=!1,d.reversePlayback=!1,d.reversed="reverse"===t,d.remaining=d.loop,r=d.children;for(var e=c=r.length;e--;)d.children[e].reset();(d.reversed&&!0!==d.loop||"alternate"===t&&1===d.loop)&&d.remaining++,b(d.reversed?d.duration:0)},d._onDocumentVisibility=p,d.set=function(t,e){return $(t,e),d},d.tick=function(t){s=t,a||(a=s),k((s+(o-a))*z.speed)},d.seek=function(t){k(m(t))},d.pause=function(){d.paused=!0,p()},d.play=function(){d.paused&&(d.completed&&d.reset(),d.paused=!1,Y.push(d),p(),Z())},d.reverse=function(){f(),d.completed=!d.reversed,p()},d.restart=function(){d.reset(),d.play()},d.remove=function(t){K(N(t),d)},d.reset(),d.autoplay&&d.play(),d}function U(t,e){for(var n=e.length;n--;)S(t,e[n].animatable.target)&&e.splice(n,1)}function K(t,e){var n=e.animations,r=e.children;U(t,n);for(var i=r.length;i--;){var a=r[i],o=a.animations;U(t,o),o.length||a.children.length||r.splice(i,1)}n.length||r.length||e.pause()}z.version="3.2.1",z.speed=1,z.suspendWhenDocumentHidden=!0,z.running=Y,z.remove=function(t){for(var e=N(t),n=Y.length;n--;)K(e,Y[n])},z.get=E,z.set=$,z.convertPx=A,z.path=function(t,e){var n=u.str(t)?g(t)[0]:t,r=e||100;return function(t){return{property:t,el:n,svg:q(n),totalLength:V(n)*(r/100)}}},z.setDashoffset=function(t){var e=V(t);return t.setAttribute("stroke-dasharray",e),e},z.stagger=function(t,e){void 0===e&&(e={});var n=e.direction||"normal",r=e.easing?p(e.easing):null,i=e.grid,a=e.axis,o=e.from||0,s="first"===o,c="center"===o,l="last"===o,h=u.arr(t),d=h?parseFloat(t[0]):parseFloat(t),f=h?parseFloat(t[1]):0,m=w(h?t[1]:t)||0,g=e.start||0+(h?d:0),v=[],y=0;return function(t,e,u){if(s&&(o=0),c&&(o=(u-1)/2),l&&(o=u-1),!v.length){for(var p=0;p<u;p++){if(i){var b=c?(i[0]-1)/2:o%i[0],S=c?(i[1]-1)/2:Math.floor(o/i[0]),k=b-p%i[0],C=S-Math.floor(p/i[0]),T=Math.sqrt(k*k+C*C);"x"===a&&(T=-k),"y"===a&&(T=-C),v.push(T)}else v.push(Math.abs(o-p));y=Math.max.apply(Math,v)}r&&(v=v.map((function(t){return r(t/y)*y}))),"reverse"===n&&(v=v.map((function(t){return a?t<0?-1*t:-t:Math.abs(y-t)})))}return g+(h?(f-d)/y:d)*(Math.round(100*v[e])/100)+m}},z.timeline=function(t){void 0===t&&(t={});var n=z(t);return n.duration=0,n.add=function(r,i){var a=Y.indexOf(n),o=n.children;function s(t){t.passThrough=!0}a>-1&&Y.splice(a,1);for(var c=0;c<o.length;c++)s(o[c]);var l=T(r,C(e,t));l.targets=l.targets||t.targets;var h=n.duration;l.autoplay=!1,l.direction=n.direction,l.timelineOffset=u.und(i)?h:L(i,h),s(n),n.seek(l.timelineOffset);var d=z(l);s(d),o.push(d);var f=X(o,t);return n.delay=f.delay,n.endDelay=f.endDelay,n.duration=f.duration,n.seek(0),n.reset(),n.autoplay&&n.play(),n},n},z.easing=p,z.penner=m,z.random=function(t,e){return Math.floor(Math.random()*(e-t+1))+t};const tt=z;function et(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var nt=function(){function t(){if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),!this.vars())return!1;this.setUpEvents()}var e,n;return e=t,(n=[{key:"vars",value:function(){return this.selectors={intro:".intro",spli:".spli",tter:".tter",spliSide:".spli__container",tterSide:".tter__container",calc:".calc",logo:".logo",toggleTheme:".toggle__theme",body:"body"},this.introContainer=document.querySelector("".concat(this.selectors.intro)),this.spliSVG=document.querySelector("".concat(this.selectors.spli)),this.tterSVG=document.querySelector("".concat(this.selectors.tter)),this.spliContainer=document.querySelector("".concat(this.selectors.spliSide)),this.tterContainer=document.querySelector("".concat(this.selectors.tterSide)),this.calculator=document.querySelector("".concat(this.selectors.calc)),this.logo=document.querySelector("".concat(this.selectors.logo)),this.toggleTheme=document.querySelector("".concat(this.selectors.toggleTheme)),this.body=document.querySelector("".concat(this.selectors.body)),this.reducedMotionMediaQuery=window.matchMedia("(prefers-reduced-motion: reduce)"),!0}},{key:"setUpEvents",value:function(){var t=this;this.perfersReducedMotion(this.reducedMotionMediaQuery)?this.removeIntroElement():(this.scaleDownAnimation(),window.addEventListener("load",(function(){t.introAnimation()})))}},{key:"perfersReducedMotion",value:function(t){return!(t&&!t.matches)}},{key:"scaleDownAnimation",value:function(){tt({targets:this.introContainer,scale:["200%","100%"],easing:"easeInOutCirc",duration:2e3})}},{key:"introAnimation",value:function(){var t=this;this.spliSVG.style.opacity=1,this.tterSVG.style.opacity=1,tt({targets:[this.getSVGPath(this.spliSVG)],strokeDashoffset:[tt.setDashoffset,0],duration:1500,easing:"easeInOutSine",delay:function(t,e){return 250*e}}),tt({targets:[this.getSVGPath(this.tterSVG)],strokeDashoffset:[tt.setDashoffset,0],duration:1500,easing:"easeInOutSine",delay:function(t,e){return 250*e}}),tt({targets:[this.getSVGPath(this.spliSVG)],fill:["rgba(0, 0, 0, 0)","#fff"],duration:1e3,easing:"easeInOutQuad",delay:function(t,e){return 400*e}}),tt({targets:[this.getSVGPath(this.tterSVG)],fill:["rgba(0, 0, 0, 0)","#fff"],duration:1e3,easing:"easeInOutQuad",delay:function(t,e){return 400*e},complete:function(){t.componentsAnimation()}}),tt({targets:this.spliContainer,translateX:-800,duration:2e3,delay:4e3,easing:"easeInOutCirc"}),tt({targets:this.tterContainer,translateX:800,duration:2e3,delay:4e3,easing:"easeInOutCirc",complete:function(){t.removeIntroElement(),t.body.style.overflow="visible"}})}},{key:"getSVGPath",value:function(t){return Array.from(t.getSVGDocument().childNodes[0].querySelectorAll("path"))}},{key:"componentsAnimation",value:function(){tt({targets:this.calculator,opacity:[0,1],scale:["80%","100%"],easing:"easeInOutCirc",duration:2500}),tt({targets:this.logo,opacity:[0,1],translateY:[-40,0],easing:"easeInOutCirc",duration:2500}),tt({targets:this.toggleTheme,opacity:[0,1],translateX:[30,0],easing:"easeInOutElastic(1, .5)",duration:2500})}},{key:"removeIntroElement",value:function(){this.introContainer.remove()}}])&&et(e.prototype,n),t}();function rt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var it="M55 27.5C55 42.6878 42.6878 55 27.5 55C12.3122 55 0 42.6878 0 27.5C0 12.3122 12.3122 0 27.5 0C42.6878 0 55 12.3122 55 27.5Z",at="M16.5 27.8382C16.5 43.0261 31 54 31 54C15.8122 54 0 43.0261 0 27.8382C0 12.6504 15.8122 0.5 31 0.5C31 0.5 16.5 12.6504 16.5 27.8382Z",ot=function(){function t(){if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),!this.vars())return!1;this.setupEvents()}var e,n;return e=t,(n=[{key:"vars",value:function(){return this.selectors={body:"data-theme",toggleTheme:".toggle__theme",toggleThemeContainer:".toggle__theme-container",calculator:"main",moon:".moon",logo:".logo"},this.body=document.querySelector("[".concat(this.selectors.body,"]")),this.toggleTheme=document.querySelector("".concat(this.selectors.toggleTheme)),this.calculator=document.querySelector("".concat(this.selectors.calculator)),this.moon=document.querySelector("".concat(this.selectors.moon)),this.toggleThemeContainer=document.querySelector("".concat(this.selectors.toggleThemeContainer)),this.logo=document.querySelector("".concat(this.selectors.logo)),this.lightTheme="light",this.darkTheme="dark",this.theme=JSON.parse(localStorage.getItem("theme"))||this.lightTheme,!0}},{key:"setupEvents",value:function(){var t=this;this.body.dataset.theme=this.theme,window.addEventListener("load",(function(){return t.onLoadTheme()})),this.toggleTheme.addEventListener("click",(function(){return t.changeTheme()})),this.toggleThemeContainer.addEventListener("keydown",(function(e){13===e.keyCode&&t.changeTheme()}))}},{key:"onLoadTheme",value:function(){this.savedTheme=this.body.dataset.theme,tt({targets:this.calculator,duration:1e3,opacity:[0,1],easing:"easeOutQuad"}),this.savedTheme===this.lightTheme?(tt({targets:this.moon,d:[{value:at}],easing:"easeOutQuad",duration:1e3}),this.svgLightAnimation()):this.savedTheme===this.darkTheme&&(tt({targets:this.moon,d:[{value:it}],easing:"easeOutQuad",duration:1e3}),this.svgDarkAnimation())}},{key:"changeTheme",value:function(){this.currentTheme=this.body.dataset.theme,this.currentTheme===this.lightTheme?(this.body.dataset.theme=this.darkTheme,this.toSunAnimation(),this.toggleThemeAnimation(),this.svgDarkAnimation(),localStorage.setItem("theme",JSON.stringify(this.darkTheme))):this.currentTheme===this.darkTheme&&(this.body.dataset.theme=this.lightTheme,this.toMoonAnimation(),this.toggleThemeAnimation(),this.svgLightAnimation(),localStorage.setItem("theme",JSON.stringify(this.lightTheme)))}},{key:"toMoonAnimation",value:function(){tt.timeline({duration:500}).add({targets:this.moon,d:[{value:at}],easing:"easeOutQuad"}).add({targets:this.toggleTheme,rotate:320,easing:"easeInOutElastic(1, .8)"},"-=50")}},{key:"toSunAnimation",value:function(){tt.timeline({duration:500}).add({targets:this.toggleTheme,rotate:0,easing:"easeInOutElastic(1, .8)"}).add({targets:this.moon,d:[{value:it}],easing:"easeInSine"},"-=200")}},{key:"toggleThemeAnimation",value:function(){tt({targets:this.body,opacity:[0,1],duration:700,easing:"easeInOutCirc"}),tt({targets:this.calculator,translateY:[-20,0],duration:1500,easing:"easeInOutCirc"})}},{key:"svgLightAnimation",value:function(){tt({targets:this.logo,opacity:[0,1],duration:100}),tt({targets:this.logoSVGPath(),fill:["hsl(185, 84%, 74%)","#3D6666"],easing:"easeOutCirc",duration:700,scale:[.8,1]})}},{key:"svgDarkAnimation",value:function(){tt({targets:this.logo,opacity:[0,1],duration:100}),tt({targets:this.logoSVGPath(),fill:["#3D6666","hsl(185, 41%, 84%)"],easing:"easeOutCirc",duration:700,scale:[.8,1]})}},{key:"logoSVGPath",value:function(){return this.logo.getSVGDocument().childNodes[0].querySelector("path")}}])&&rt(e.prototype,n),t}();function ut(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var st=function(){function t(){if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),!this.vars())return!1;this.setupEvents()}var e,n;return e=t,(n=[{key:"vars",value:function(){return this.selectors={inputBill:"input--bill",inputCustom:"input--custom",inputPeople:"input--num-of-people",percentageBtns:"#input--percentage button",tipAmount:".tip__result",totalAmount:".total__result",reset:".reset",inputPeopleLabel:".input__persons label"},this.inputBill=document.getElementById("".concat(this.selectors.inputBill)),this.inputCustom=document.getElementById("".concat(this.selectors.inputCustom)),this.inputPeople=document.getElementById("".concat(this.selectors.inputPeople)),this.percentageBtns=Array.from(document.querySelectorAll("".concat(this.selectors.percentageBtns))),this.tipAmount=document.querySelector("".concat(this.selectors.tipAmount)),this.totalAmount=document.querySelector("".concat(this.selectors.totalAmount)),this.reset=document.querySelector("".concat(this.selectors.reset)),this.inputPeopleLabel=document.querySelector("".concat(this.selectors.inputPeopleLabel)),!0}},{key:"setupEvents",value:function(){var t=this;this.handleAllInputs(),this.inputBill.addEventListener("input",(function(){return t.refreshResult()})),this.percentageBtns.forEach((function(e){e.addEventListener("click",(function(){t.removeCurrentActiveStyles(),e.classList.add("active"),t.inputCustom.value="",t.refreshResult()}))})),this.inputCustom.addEventListener("input",(function(){t.removeCurrentActiveStyles(),t.refreshResult()})),this.inputPeople.addEventListener("input",(function(e){0==+e.target.value?(t.errorStyles("add"),t.displayResult("__.__","__.__")):(t.errorStyles("remove"),t.refreshResult())})),this.reset.addEventListener("click",(function(){return t.resetCalc()}))}},{key:"handleAllInputs",value:function(){this.limitInputTo(this.inputBill,99999),this.limitInputTo(this.inputCustom,100),this.limitInputTo(this.inputPeople,100)}},{key:"limitInputTo",value:function(t,e){t.addEventListener("input",(function(){var n=t.value;t.value=n>e?e:n}))}},{key:"removeCurrentActiveStyles",value:function(){this.percentageBtns.forEach((function(t){return t.classList.remove("active")}))}},{key:"resetCalc",value:function(){this.inputBill.value="",this.removeCurrentActiveStyles(),this.inputCustom.value="",this.inputPeople.value="",this.errorStyles("remove"),this.displayResult("0.00","0.00"),this.disableReset(!0)}},{key:"validateForm",value:function(){return""===this.getInputVal(this.inputBill)||""===this.getInputVal(this.inputPeople)||""===this.getInputVal(this.inputCustom)&&!this.percentageBtns.some((function(t){return t.classList.contains("active")}))?(this.disableReset(!0),this.displayResult("__.__","__.__"),!1):(this.disableReset(!1),!0)}},{key:"displayResult",value:function(t,e){this.tipAmount.innerText=this.tipAmount.innerText.replace(/[^$].+/,t),this.totalAmount.innerText=this.totalAmount.innerText.replace(/[^$].+/,e)}},{key:"errorStyles",value:function(t){"add"===t&&(this.inputPeopleLabel.classList.add("error"),this.inputPeople.classList.add("error__border")),"remove"===t&&(this.inputPeopleLabel.classList.remove("error"),this.inputPeople.classList.remove("error__border"))}},{key:"refreshResult",value:function(){if(this.validateForm()){var t=+this.getInputVal(this.inputBill),e=+this.getInputVal(this.inputPeople),n=+(this.getInputVal(this.inputCustom)||this.percentageBtns.filter((function(t){return t.classList.contains("active")}))[0].value);if(0!==e){this.errorStyles("remove");var r=t*(n/100),i=(r/e).toLocaleString(void 0,{minimumFractionDigits:2,maximumFractionDigits:2}),a=((t+r)/e).toLocaleString(void 0,{minimumFractionDigits:2,maximumFractionDigits:2});this.displayResult(i,a)}}}},{key:"disableReset",value:function(t){this.reset.disabled=!0===t}},{key:"getInputVal",value:function(t){return t.value}}])&&ut(e.prototype,n),t}();new nt,new ot,new st,console.log("(\\ /)\n(0_0) Coded this.")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,